# This is the playbook used by the `quickstart.sh` script.

# Add the virthost to the in-memory inventory.  The inventory is not
# wirtten out to disk unless you call the `rebuild-inventory` role.
- name: Add the virthost to the inventory
  hosts: localhost
  tasks:
    - add_host:
        name: "{{virthost}}"
        groups: "virthost"
        ansible_fqdn: "{{ virthost }}"
        ansible_user: "root"
        ansible_host: "{{ virthost }}"


- include: teardown.yml

# The [provision.yml](provision.yml.html) playbook is responsible for
# creating an inventory entry for our `virthost` and for creating an
# unprivileged user on that host for use by our virtual environment.
- include: provision.yml

# The `environment/setup` role performs any tasks that require `root`
# access on the target host.
- name: Install libvirt packages and configure networks
  hosts: virthost
  gather_facts: yes
  tags:
    - environment
  roles:
    - environment/setup

# The `libvirt/setup` role creates the undercloud and overcloud
# virtual machines.
- name:  Setup undercloud and overcloud vms
  hosts: virthost
  gather_facts: yes
  roles:
    - libvirt/setup


# Add the undercloud node to the generated
# inventory.
- name:  Inventory the undercloud
  hosts: localhost
  gather_facts: yes
  vars:
      inventory: undercloud
  roles:
    - { role: tripleo-inventory, tags: ['undercloud-scripts'] }

# Deploy the undercloud
- name:  Install undercloud and deploy overcloud
  hosts: undercloud
  gather_facts: no
  roles:
    - tripleo/undercloud

# Deploy the overcloud
- name:  Deploy the overcloud
  hosts: undercloud
  gather_facts: no
  roles:
    - tripleo/overcloud

# Add the overcloud nodes to the generated inventory.
- name:  Inventory the overcloud
  hosts: undercloud
  gather_facts: yes
  vars:
      inventory: all
  roles:
    - { role: tripleo-inventory, tags: ['overcloud-deploy'] }

# Check the results of the deployment, note after inventory has executed
- name:  Check the result of the deployment
  hosts: localhost
  tags:
    - overcloud-deploy
  tasks:
    - name: ensure the deployment result has been read into memory
      include_vars: "{{ local_working_dir }}/overcloud_deployment_result.json"

    # overcloud_deploy_result = ["failed", "passed"]
    - name: did the deployment pass or fail?
      debug: var=overcloud_deploy_result
      failed_when: overcloud_deploy_result == "failed"

# Validate the deployment
- name:  validate the overcloud
  hosts: undercloud
  tags:
    - overcloud-validate
  gather_facts: no
  roles:
    - tripleo/validate
